language: generic

sudo: required

services:
  - docker

before_deploy:
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp Dockerfile before-deploy/     # Dockerfile 복사하기 
  - cp appspec.yml before-deploy/    # CodeDeploy 에게 필요한 appspec.yml 파일
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/bolier-CD.zip # deploy로 zip파일 이동

script:
  - docker run -e CI=true dudckd/bolier npm run test

# after_success:
#   - docker build -t dudckd/bolier_back ./

#   - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_ID" --password-stdin

#   - docker push dudckd/bolier_back
# 환경 생성후 배포부분들을 바꿔준다

# - provider: codedeploy # AWS CodeDeploy를 의미
#     access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
#     secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
#     bucket: jeffchoi-ci-cd-tutorial # AWS CodeDeploy가 다운로드 받은 버킷
#     key: bolier-CD.zip # 해당 버킷에 저장되어 있는 파일 이름
#     bundle_type: zip # 버킷에 저장되어 있는 파일의 확장자
#     application: ci-cd-tutorial-code-deploy-service # AWS 배포 애플리케이션
#     deployment_group: ci-cd-deploy-grop # AWS 배포 애플리케이션에 만들어져 있는 배포 그룹
#     region: ap-northeast-2
#     wait-until-deployed: true
#     on:
#       repo: jeffchoi72/node-koa-server
#       branch: master
deploy:
  provider: codedeploy
  region: "ap-northeast-2"
  application: "test"
  deployment_group: "test_test"
  key: bolier-CD.zip
  bucket: wooyc
  bundle_type: zip
  on:
    branch: master
  
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_ACCESS_KEY